import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import React, { useRef, useState } from "react";
import styles from "../styles/Home.module.css";

export default function Home() {
  const [coordinatePoints, setFormFields] = useState([{ lat: "", long: "" }]);

  const handleFormChange = (event, index) => {
    let data = [...coordinatePoints];
    data[index][event.target.name] = event.target.value;
    setFormFields(data);
  };

  const submitForm = async () => {
    const response = await fetch("/api/route", {
      method: "POST",
      body: JSON.stringify({ coordinatePoints }),
      headers: {
        "Content-Type": "application/json",
      },
    });
    const data = await response.json();
    console.log(data);
  };

  const submit = (e) => {
    e.preventDefault();
    console.log(coordinatePoints);
    submitForm();
  };

  const addFields = () => {
    let object = {
      lat: "",
      long: "",
    };

    setFormFields([...coordinatePoints, object]);
  };

  const removeFields = (index) => {
    let data = [...coordinatePoints];
    data.splice(index, 1);
    setFormFields(data);
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Definir rota!</h1>
        <p>
          Digite os pontos que deseja que o rob√¥ passe em latitude e longitude.
        </p>
        <div className="App">
          <form onSubmit={submit}>
            {coordinatePoints.map((form, index) => {
              return (
                <div key={index}>
                  <input
                    name="lat"
                    placeholder="Latitude"
                    onChange={(event) => handleFormChange(event, index)}
                    value={form.lat}
                  />
                  <input
                    name="long"
                    placeholder="Longitude"
                    onChange={(event) => handleFormChange(event, index)}
                    value={form.long}
                  />
                  <button onClick={() => removeFields(index)}>Remover</button>
                </div>
              );
            })}
          </form>
          <button onClick={addFields}>Adicionar</button>
          <br />
          <button onClick={submit}>Enviar</button>
        </div>
      </main>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
